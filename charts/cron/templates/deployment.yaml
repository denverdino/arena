{{- if (not .Values.tfjob.enableGangScheduler) -}}
{{- if .Values.tfjob.useTensorboard }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tensorboard
  labels:
    app: {{ template "tfjob.name" . }}
    chart: {{ template "tfjob.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    createdBy: "TFJob"
    role: tensorboard
spec:
  selector:
    matchLabels:
      app: {{ template "tfjob.name" . }}
      chart: {{ template "tfjob.chart" . }}
      release: {{ .Release.Name }}
      role: tensorboard
  template:
    metadata:
      labels:
        app: {{ template "tfjob.name" . }}
        chart: {{ template "tfjob.chart" . }}
        release: {{ .Release.Name }}
        role: tensorboard
    spec:
      {{- if ne (len .Values.tfjob.tolerations) 0 }}
      tolerations:
      {{- range $tolerationKey := .Values.tfjob.tolerations }}
        {{- if eq $tolerationKey "all" }}
        - operator: "Exists"
        {{- else }}
        - key: "{{ $tolerationKey }}"
          operator: "Exists"
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.tfjob.priorityClassName }}
      priorityClassName: {{ .Values.tfjob.priorityClassName }}
      {{- end }}
      {{- if .Values.tfjob.ps }}
      {{- if .Values.tfjob.hasGangScheduler }}
      {{- if .Values.tfjob.enableGangScheduler }}
      schedulerName: {{ .Values.tfjob.schedulerName }}
      {{- end }}
      {{- end }}
      {{- end }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: 
                  - {{ template "tfjob.name" . }}
              - key: release
                operator: In
                values: 
                  - {{ .Release.Name }}
              {{- if .Values.tfjob.chief }}
              - key: tf-replica-type
                operator: In
                values: 
                  - "chief"
              {{- else }}
              - key: tf-replica-index
                operator: In
                values: 
                  - "0"
              - key: tf-replica-type
                operator: In
                values: 
                  - "worker"
              {{- end }}
            topologyKey: kubernetes.io/hostname
      {{- if .Values.tfjob.enablePodSecurityContext }}
      {{- if .Values.tfjob.isNonRoot}}
      securityContext:
        runAsUser: {{ .Values.tfjob.podSecurityContext.runAsUser }}
        runAsGroup: {{ .Values.tfjob.podSecurityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.tfjob.podSecurityContext.runAsNonRoot }}
        supplementalGroups:
          {{- range $group := .Values.tfjob.podSecurityContext.supplementalGroups }}
          - {{ $group -}}
          {{ end }}
      {{- end }}
      {{- end }}
      volumes:
        {{- if .Values.tfjob.isLocalLogging }}
        - hostPath:
            path: "{{ .Values.tfjob.hostLogPath }}"
          name: training-logs-volume
        {{- end }}
        {{- if (not .Values.tfjob.isLocalLogging) }}
        {{- if .Values.tfjob.dataset }}   
        {{- range $pvcName, $destPath := .Values.tfjob.dataset }}
        - name: "{{ $pvcName }}"
          persistentVolumeClaim:
            claimName: "{{ $pvcName }}"
        {{- end }}
        {{- end }}
        {{- end }}
      {{- if ne (len .Values.tfjob.imagePullSecrets) 0 }}
      imagePullSecrets:
      {{- range $imagePullSecret := .Values.tfjob.imagePullSecrets }}
        - name: "{{ $imagePullSecret }}"
      {{- end }}
      {{- end }}
      containers:
      - name: tensorboard      
        {{- if .Values.tfjob.isLocalLogging }}
        command: ["tensorboard", "--logdir", "/output/training_logs",  "--host",  "0.0.0.0"]
        {{- else}}
        command: ["tensorboard", "--logdir", "{{ .Values.tfjob.trainingLogdir }}",  "--host",  "0.0.0.0"]
        {{- end }}
        image: "{{ .Values.tfjob.tensorboardImage }}"
        imagePullPolicy: {{ .Values.tfjob.tensorboardImagePullpolicy }}
        resources:
{{ toYaml .Values.tfjob.tensorboardResources | indent 10 }}
        ports:
        - containerPort: 6006
        volumeMounts:
        {{- if .Values.tfjob.isLocalLogging }}
        - mountPath: /output/training_logs
          name: training-logs-volume
        {{- else }}
        {{- if .Values.tfjob.dataset }}   
        {{- range $pvcName, $destPath := .Values.tfjob.dataset }}
        - name: "{{ $pvcName }}"
          mountPath: "{{ $destPath }}"
        {{- end }}
        {{- end }}
        {{- end }}
{{- end }}
{{- end }}

{{- $gpuCount := .Values.gpuCount -}}
{{- $gpuMemory := .Values.gpuMemory -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nvidia-triton-server.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "nvidia-triton-server.chart" . }}
    app: {{ template "nvidia-triton-server.name" . }}
    servingName: "{{ .Values.servingName }}"
    servingVersion: "{{ .Values.servingVersion }}"
    servingType: "triton-serving"
  annotations:
    "helm.sh/created": {{ .Release.Time.Seconds | quote }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      app: {{ template "nvidia-triton-server.name" . }}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "nvidia-triton-server.chart" . }}
        app: {{ template "nvidia-triton-server.name" . }}
        serviceName: "{{ .Values.servingName }}"
        servingName: "{{ .Values.servingName }}"
        servingVersion: "{{ .Values.servingVersion }}"
        servingType: "triton-serving"
    spec:
      containers:
        - name: tritonserver
          {{- if .Values.image }}
          image: "{{ .Values.image }}"
          {{- end }}
          {{- if .Values.imagePullPolicy }}
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          {{- end }}
          env:
          {{- if .Values.envs }}
          {{- range $key, $value := .Values.envs }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          {{- end }}
          args:
            - "tritonserver"
            {{- if .Values.httpPort }}
            - "--http-port={{ .Values.httpPort }}"
            {{- end }}
            {{- if .Values.grpcPort }}
            - "--grpc-port={{ .Values.grpcPort }}"
            {{- end }}
            {{- if .Values.allowMetrics }}
            - "--metrics-port={{ .Values.metricPort }}"
            {{- end }}
            {{- if ne .Values.modelRepository "" }}
            - "--model-repository={{ .Values.modelRepository }}"
            {{- end }}
            - "--allow-metrics={{ .Values.allowMetrics }}"
          ports:
            - containerPort: {{ .Values.httpPort }}
              name: http
              protocol: TCP
            - containerPort: {{ .Values.grpcPort }}
              name: grpc
            - containerPort: {{ .Values.metricsPort }}
              name: metrics
          livenessProbe:
            failureThreshold: 30
            initialDelaySeconds: 100
            periodSeconds: 5
            httpGet:
              path: /v2/health/live
              port: http
          readinessProbe:
            failureThreshold: 30
            initialDelaySeconds: 100
            periodSeconds: 5
            httpGet:
              path: /v2/health/ready
              port: http
          resources:
            limits:
              {{- if .Values.cpu }}
              cpu: {{ .Values.cpu }}
              {{- end }}
              {{- if .Values.memory }}
              memory: {{ .Values.memory }}
              {{- end }}
              {{- if gt (int $gpuCount) 0}}
              nvidia.com/gpu: {{ .Values.gpuCount }}
              {{- end }}
              {{- if gt (int $gpuMemory) 0}}
              aliyun.com/gpu-mem: {{ .Values.gpuMemory }}
              {{- end }}
          volumeMounts:
            {{- if .Values.modelDirs }}
            {{- range $pvcName, $destPath := .Values.modelDirs}}
            - name: "{{ $pvcName }}"
              mountPath: "{{ $destPath }}"
            {{- end }}
            {{- end }}
      volumes:
        {{- if .Values.modelDirs }}
        {{- range $pvcName, $destPath := .Values.modelDirs}}
        - name: "{{ $pvcName }}"
          persistentVolumeClaim:
            claimName: "{{ $pvcName }}"
        {{- end }}
        {{- end }}
